diff --git a/src/com/android/server/telecom/CallAudioManager.java b/src/com/android/server/telecom/CallAudioManager.java
index 6010b70..2c3fab9 100644
--- a/src/com/android/server/telecom/CallAudioManager.java
+++ b/src/com/android/server/telecom/CallAudioManager.java
@@ -415,6 +415,7 @@ final class CallAudioManager extends CallsManagerListenerBase
                 // DISCONNECTED. When the call eventually transitions to the next state, audio
                 // focus will be correctly abandoned by the if clause above.
             }
+            resetAudioStreamVolume();
         }
     }
 
@@ -558,6 +559,7 @@ final class CallAudioManager extends CallsManagerListenerBase
         Call call = CallsManager.getInstance().getForegroundCall();
         if (call != null && call.getConnectionService() != null) {
             call.getConnectionService().onAudioStateChanged(call, mAudioState);
+            resetAudioStreamVolume();
         }
     }
 
@@ -585,6 +587,26 @@ final class CallAudioManager extends CallsManagerListenerBase
         return mAudioFocusStreamType != STREAM_NONE;
     }
 
+        /* Fix low in call volume */
+    private void resetAudioStreamVolume() {
+        // determine actual streamType
+        int streamType = AudioManager.STREAM_VOICE_CALL;
+        if (mBluetoothManager.isBluetoothAudioConnectedOrPending()) {
+            streamType = AudioManager.STREAM_BLUETOOTH_SCO;
+        }
+        // determine volume and 1 level lower volume (lowest level can be 0)
+        int volume = mAudioManager.getStreamVolume(streamType);
+        int lowerVolume = volume - 1;
+        if (lowerVolume < 0) {
+            lowerVolume = 0;
+        }
+        Log.i(this,"resetAudioStreamVolume (streamType=" + streamType + ", streamVolume=" + volume + ")...");
+        // It's important to change it to another volume before restoring the original volume,
+        // otherwise the volume change will NOT be triggered!!
+        mAudioManager.setStreamVolume(streamType, lowerVolume, 0);
+        mAudioManager.setStreamVolume(streamType, volume, 0);
+    }
+
     /**
      * Dumps the state of the {@link CallAudioManager}.
      *
-- 
2.1.0

